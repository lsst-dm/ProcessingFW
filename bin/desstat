#!/usr/bin/env python

import argparse
import sys
#import re
#import os
import processingfw.pfwcondor as pfwcondor
#import pfwcondor


def main(argv=None):
    parser = argparse.ArgumentParser(description='desstat')
    parser.add_argument('--user', action='store', default=None)
    args = parser.parse_args(argv)

    constraint_str = "-constraint des_isdesjob "
    if args.user:
        constraint_str += args.user
    (qjobs, top_jobs, orphan_jobs) = pfwcondor.condorq_dag(constraint_str)
#    print qjobs

    jobcnt = len(qjobs)
    if jobcnt == 0:
        print "No DES jobs\n" 
        return(1)

    # Output jobs
    print_header()
    for job in sorted(top_jobs): 
        print_single(job, " ", qjobs)

    for job in sorted(orphan_jobs):
        if 'des_block' in qjobs[job] and \
            qjobs[job]['des_block'] == 'saveruntime':
            print_single(job, " ", qjobs)
        else:
            print_single(job, "X", qjobs)

    return(0)


def print_header(): 
    """ Print header line """
    print "%7s %1s %3s %-27s %-30s %-15s %-17s %-8s %-15s" % \
          ("ID", "T","PRJ","RUN","BLOCK","SUBBLOCK","STAT",
           "OPERATOR", "RUNSITE")
    print "="*123


def status_target_jobs(job, qjobs):
    numtjobs = 'UNK'
    if 'des_numjobs' in qjobs[job]:
        numtjobs = qjobs[job]['des_numjobs']

    chstat = {'PEND': 0, 'UNSUB': 0, 'RUN': 0, 'ERR': 0}
    for childjob in qjobs[job]['children']:
        chstat[pfwcondor.get_job_status_str(childjob, qjobs)] += 1
    status = "(%s/%s/%s/%s)" % (chstat['ERR'], 
                                chstat['PEND'] + chstat['UNSUB'], 
                                chstat['RUN'], 
                                numtjobs)
    return(status)
    

def print_single(topjobid, jobtype, qjobs):
    """ Print info for single job """

    if 'des_operator' not in qjobs[topjobid]:
        if 'owner' in qjobs[topjobid]:
            qjobs[topjobid]['des_operator'] = qjobs[topjobid]['owner'].replace('"', '')
        else:
            qjobs[topjobid]['des_operator'] = "UNK"

    # find innermost dag job
    jobid = topjobid
    while len(qjobs[jobid]['children']) == 1:
        jobid = qjobs[jobid]['children'][0]

    # grab DESDM from job attributes 
    info = {}
    for key in ['project', 'run', 'runsite', 'block', 'subblock', 'operator']:
        info[key] = ""
        if "des_"+key in qjobs[jobid]:
            info[key] = qjobs[jobid]["des_"+key]

    info['status'] = pfwcondor.get_job_status_str(jobid, qjobs)

    # If pipeline mngr, count number of pending, running, etc target jobs
    if len(qjobs[jobid]['children']) > 0:
        info['status'] = status_target_jobs(jobid, qjobs)
        info['subblock'] = "pipelines"
        info['block'] = qjobs[qjobs[jobid]['children'][0]]['des_block']

    print "%7s %1s %3s %-27s %-30s %-15s %-17s %-8s %-15s" % ( 
          topjobid, jobtype, info['project'][:3], info['run'][:27], 
          info['block'][:25], info['subblock'][:15], info['status'][:17],
          info['operator'][:8], info['runsite'][:15],
    )


if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
